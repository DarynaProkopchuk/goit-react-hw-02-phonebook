{"version":3,"sources":["components/ContactList/ContactsList.module.css","App.module.css","components/ContactForm/ContaktForm.jsx","components/ContactList/ContactsList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","INITIAL_STATE","name","phone","ContactForm","state","handelChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","alert","this","onSubmit","className","styles","form","type","placeholder","onChange","pattern","title","required","btnAddContact","Component","ContactsListItem","onRemove","contactListItem","onClick","btnDelete","ContactsList","contacts","console","log","length","map","contact","key","Filter","filter","App","handleAddContact","newContact","handleCheckUnique","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df8dd935.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDelete\":\"ContactsList_btnDelete__39uTI\",\"contactListItem\":\"ContactsList_contactListItem__3CNfi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"Form\":\"App_Form__3oXAM\"};","import { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport styles from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  phone: '',\n};\nclass ContactForm extends Component {\n  state = INITIAL_STATE;\n    handelChangeForm = ({ target }) => {\n        const { name, value } = target\n        this.setState({ [name]: value })\n    };\n    handleFormSubmit = e => {\n    e.preventDefault();\n\n    const { name, phone } = this.state;\n    const { onAdd } = this.props;\n\n    const isValidatedForm = this.validateForm();\n    if (!isValidatedForm) return;\n    onAdd({ id: uuid(), name, phone });\n    this.resetForm();\n  };\n\n    validateForm = () => {\n        const { name, phone } = this.state;\n        const { onCheckUnique } = this.props;\n        if (!name || !phone) {\n            alert('Some fields are empty')\n            return false\n        }\n        return onCheckUnique(name)\n    };\n    resetForm = () => this.setState(INITIAL_STATE);\n    \n    render() {\n    const { name, phone } = this.state;\n    return (\n      <form onSubmit={this.handleFormSubmit} className={styles.form}>\n \n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            value={name}\n            onChange={this.handelChangeForm}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n     \n\n      \n          <input\n            type=\"tel\"\n            name=\"phone\"\n            placeholder=\"Enter phone number\"\n            value={phone}\n            onChange={this.handelChangeForm}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n          />\n      \n        <button type=\"submit\" className={styles.btnAddContact}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;","import styles from './ContactsList.module.css'\nimport PropTypes from 'prop-types';\n\nconst ContactsListItem = ({ id, name, phone, onRemove }) => {\n  return (\n    <li className={styles.contactListItem}>\n      {name}: {phone}{' '}\n      <button onClick={() => onRemove(id)} className={styles.btnDelete}>\n        delete\n      </button>\n    </li>\n  );\n};\nconst ContactsList = ({ contacts, onRemove }) => {\n  console.log('{ contacts, onRemove }', { contacts, onRemove });\n\n  if (contacts.length === 0) return null;\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ContactsListItem {...contact} onRemove={onRemove} key={contact.id} />\n      ))}\n    </ul>\n  );\n};\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\nContactsList.propTypes = {\n  \n  contacts: PropTypes.array.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\nexport default ContactsList;","\n    \nimport styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => onChange(target.value)}\n      placeholder=\"Enter name for search\"\n    />\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContaktForm';\nimport ContactsList from './components/ContactList/ContactsList';\nimport Filter from './components/Filter/Filter';\nimport styles from './App.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n  handleAddContact = newContact =>\n    this.setState(({ contacts }) => ({ contacts: [...contacts, newContact] }));\n\n  handleCheckUnique = name => {\n    const { contacts } = this.state;\n\n    const isExistContact = !!contacts.find(contact => contact.name === name);\n    isExistContact && alert('Contact is already exists');\n    return !isExistContact;\n  };\n\n  handleRemoveContact = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n\n  handleFilterChange = filter => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className={styles.App}>\n        <h1>Phonebook</h1>\n        <ContactForm\n          onAdd={this.handleAddContact}\n          onCheckUnique={this.handleCheckUnique}\n        />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onChange={this.handleFilterChange} />\n        <ContactsList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './base.css';\nimport 'modern-normalize/modern-normalize.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnAddContact\":\"ContactForm_btnAddContact__2bijG\",\"form\":\"ContactForm_form__1fuOn\"};"],"sourceRoot":""}